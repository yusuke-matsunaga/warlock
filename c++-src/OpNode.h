#ifndef OPNODE_H
#define OPNODE_H

/// @file OpNode.h
/// @brief OpNode のヘッダファイル
/// @author Yusuke Matsunaga (松永 裕介)
///
/// Copyright (C) 2020 Yusuke Matsunaga
/// All rights reserved.

#include "FgNode.h"


BEGIN_NAMESPACE_WARLOCK

//////////////////////////////////////////////////////////////////////
/// @class OpNode OpNode.h "OpNode.h"
/// @brief 演算ノード
//////////////////////////////////////////////////////////////////////
class OpNode :
  public FgNode
{
public:

  /// @brief コンストラクタ
  /// @param[in] id ID番号
  /// @param[in] fanin_list ファンインノードのリスト
  /// @param[in] op_type 演算タイプ
  OpNode(int id,
	 const vector<FgNode*>& fanin_list,
	 const OpType& op_type);

  /// @brief デストラクタ
  ~OpNode();


public:
  //////////////////////////////////////////////////////////////////////
  // 外部インターフェイス
  //////////////////////////////////////////////////////////////////////

  /// @brief 演算タイプを返す．
  const OpType&
  op_type() const;


private:
  //////////////////////////////////////////////////////////////////////
  // 内部で用いられる関数
  //////////////////////////////////////////////////////////////////////


private:
  //////////////////////////////////////////////////////////////////////
  // データメンバ
  //////////////////////////////////////////////////////////////////////

  // 演算タイプ
  const OpType& mOpType;

};


//////////////////////////////////////////////////////////////////////
// インライン関数の定義
//////////////////////////////////////////////////////////////////////

// @brief 演算タイプを返す．
inline
const OpType&
OpNode::op_type() const
{
  return mOpType;
}

END_NAMESPACE_WARLOCK

#endif // OPNODE_H
