#ifndef LOADNODE_H
#define LOADNODE_H

/// @file LoadNode.h
/// @brief LoadNode のヘッダファイル
/// @author Yusuke Matsunaga (松永 裕介)
///
/// Copyright (C) 2020 Yusuke Matsunaga
/// All rights reserved.

#include "MemNode.h"


BEGIN_NAMESPACE_WARLOCK

//////////////////////////////////////////////////////////////////////
/// @class LoadNode LoadNode.h "LoadNode.h"
/// @brief メモリからロードする処理を表すノード
//////////////////////////////////////////////////////////////////////
class LoadNode :
  public MemNode
{
public:

  /// @brief コンストラクタ
  /// @param[in] id ID番号
  /// @param[in] addr アドレス
  /// @param[in] block_id ブロック番号
  /// @param[in] bank_id バンク番号
  /// @param[in] offset オフセット
  LoadNode(int id,
	   int addr,
	   int block_id,
	   int bank_id,
	   int offset);

  /// @brief デストラクタ
  ~LoadNode();


public:
  //////////////////////////////////////////////////////////////////////
  // 外部インターフェイス
  //////////////////////////////////////////////////////////////////////

  /// @brief ノードの種類を返す．
  NodeType
  type() const override;

  /// @brief 名前を返す．
  string
  name() const override;


private:
  //////////////////////////////////////////////////////////////////////
  // 内部で用いられる関数
  //////////////////////////////////////////////////////////////////////


private:
  //////////////////////////////////////////////////////////////////////
  // データメンバ
  //////////////////////////////////////////////////////////////////////


};

END_NAMESPACE_WARLOCK

#endif // LOADNODE_H
